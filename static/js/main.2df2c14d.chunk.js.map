{"version":3,"sources":["components/welcome/Welcome.js","components/clock/Clock.js","components/contact/Contact.js","components/navigation/Navigation.js","components/page404/Page404.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","props","className","name","Clock","state","date","Date","this","timerId","setInterval","tick","clearInterval","setState","toLocaleTimeString","Component","Contact","handleChange","event","formData","target","value","handleSubmit","preventDefault","submitted","resetForm","firstName","lastName","email","onClick","onSubmit","onChange","type","Child","useParams","Navigation","to","path","children","Page404","App","exact","render","match","params","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2df2c14d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Welcome(props) {\r\n    return (\r\n        <div className=\"Welcome\">\r\n            Welcome, {props.name}!\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from \"react\";\r\n\r\nclass Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: new Date(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerId = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date(),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <h2 className=\"Clock\">{this.state.date.toLocaleTimeString()}</h2>;\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            submitted: false,\r\n            formData: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\"\r\n            }\r\n        }\r\n    }\r\n    handleChange = (event) => {\r\n        let formData = this.state.formData;\r\n        formData[event.target.name] = event.target.value;\r\n        this.setState({ formData });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            submitted: true\r\n        })\r\n    }\r\n    resetForm = (event) => {\r\n        this.setState({\r\n            submitted: false,\r\n            formData: {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\"\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        //show the thank you message if the form has been submitted\r\n        if (this.state.submitted) {\r\n            return (\r\n                <div>\r\n                    Thank you, {this.state.formData.firstName}, for submitting the form <br />\r\n                    <button onClick={this.resetForm}>Reset Form</button>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                        <label>First Name:</label>\r\n                        <input onChange={this.handleChange} type=\"text\" name=\"firstName\" value={this.state.formData.firstName} />\r\n                    </div>\r\n                    <div>\r\n                        <label>Last Name:</label>\r\n                        <input onChange={this.handleChange} type=\"text\" name=\"lastName\" value={this.state.formData.lastName} />\r\n                    </div>\r\n                    <button>Submit Form</button> <br />\r\n                    {this.state.formData.firstName}\r\n                    <br />\r\n                    {this.state.formData.lastName}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport {\r\n    Route,\r\n    Link,\r\n    useParams\r\n} from 'react-router-dom';\r\n\r\n\r\nfunction Child(props) {\r\n    let { name } = useParams();\r\n    return (\r\n        <div>\r\n            <h3>ID:{name} </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Navigation(props) {\r\n    return (\r\n\r\n        <div className='Navigation'>\r\n            <ul>\r\n                <li><Link to='/welcome/:name'>Home</Link></li>\r\n                <li><Link to='/clock'>Clock</Link></li>\r\n                <li><Link to='/contact'>Contact</Link></li>\r\n\r\n            </ul>\r\n\r\n\r\n            <Route path='/' children={<Child name={props.name} />} />\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Navigation;","import React from 'react'\r\n\r\nfunction Page404() {\r\n    return (\r\n        <div>Page 404. Page not found</div>\r\n    );\r\n}\r\nexport default Page404;","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport \"./App.css\";\n\nimport Welcome from \"./components/welcome/Welcome\";\nimport Clock from \"./components/clock/Clock\";\nimport Contact from \"./components/contact/Contact\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport Page404 from \"./components/page404/Page404\";\n\nfunction App() {\n  return (\n    <Router>\n\n      <div className=\"App\">\n\n        <Navigation />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <Welcome {...props} name=\"james\" />}\n\n          />\n\n\n          <Route\n            exact\n            path=\"/welcome/:name\"\n            render={(props) => <Welcome {...props} name={props.match.params.name} />}\n          />\n\n\n          <Route\n            exact\n            path=\"/clock\"\n            component={Clock}\n          />\n\n          <Route\n            exact\n            path=\"/contact\"\n            component={Contact}\n          />\n\n          <Route\n            component={Page404}\n          />\n\n        </Switch>\n\n      </div>\n    </Router>\n  );\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}